<?xml version="1.0"?>
<ruleset name="custom">
    <description>Custom PHPCS standard.</description>

    <!-- Coding standard. -->
    <rule ref="Symfony">
        <exclude name="Symfony.Commenting.FunctionComment.SpacingAfterParamType" />
    </rule>

    <!-- Show sniff codes in all reports -->
    <arg value="s"/>
    <!-- Show progress of the run. -->
    <arg value="p"/>
    <arg name="colors"/>

    <!--
    PHP_CodeSniffer does not support scanning of files without extensions, so
    we have to use the ugly workaround to copy the file into a file with a 'php'
    extension, scan that file, and then delete it.
    @see https://github.com/squizlabs/PHP_CodeSniffer/issues/2916
    -->
    <file>src</file>
    <file>tests</file>

    <rule ref="Symfony.Commenting.License.Warning">
        <exclude-pattern>*.*</exclude-pattern>
    </rule>
    <rule ref="Symfony.Functions.Arguments.Invalid">
        <exclude-pattern>*.*</exclude-pattern>
    </rule>
    <rule ref="Symfony.ControlStructure.YodaConditions.Invalid">
        <exclude-pattern>*.*</exclude-pattern>
    </rule>

    <rule ref="PSR1">
        <exclude name="PSR1.Classes.ClassDeclaration.MissingNamespace" />
    </rule>

    <!--Allow uncommented functions in tests as they usually provide enough
    information from their names.-->
    <rule ref="Symfony.Commenting.FunctionComment.Missing">
        <exclude-pattern>tests/*.Test\.php</exclude-pattern>
        <exclude-pattern>tests/*.TestCase\.php</exclude-pattern>
    </rule>
    <rule ref="Symfony.Commenting.FunctionComment.MissingParamTag">
        <exclude-pattern>tests/*.Test\.php</exclude-pattern>
        <exclude-pattern>tests/*.TestCase\.php</exclude-pattern>
    </rule>
</ruleset>
