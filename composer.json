{
    "name": "drevops/git-artifact",
    "description": "Build artifact from your codebase in CI and push it to a separate git repo.",
    "license": "GPL-2.0-or-later",
    "type": "package",
    "authors": [
        {
            "name": "Alex Skrypnyk",
            "email": "alex@drevops.com"
        }
    ],
    "homepage": "https://github.com/drevops/git-artifact",
    "support": {
        "issues": "https://github.com/drevops/git-artifact/issues",
        "source": "https://github.com/drevops/git-artifact"
    },
    "require": {
        "php": ">=8.2",
        "czproject/git-php": "^4.3",
        "monolog/monolog": "^3.5",
        "symfony/console": "^7",
        "symfony/filesystem": "^7",
        "symfony/finder": "^7",
        "symfony/monolog-bridge": "^7",
        "symfony/process": "^7"
    },
    "require-dev": {
        "bamarni/composer-bin-plugin": "^1.8",
        "dealerdirect/phpcodesniffer-composer-installer": "^1.0",
        "drupal/coder": "^8.3",
        "ergebnis/composer-normalize": "^2.43",
        "phpstan/phpstan": "^2",
        "phpunit/phpunit": "^11",
        "rector/rector": "^2"
    },
    "autoload": {
        "psr-4": {
            "DrevOps\\GitArtifact\\": "src"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "DrevOps\\GitArtifact\\Tests\\": "tests"
        }
    },
    "bin": [
        "git-artifact"
    ],
    "config": {
        "allow-plugins": {
            "bamarni/composer-bin-plugin": true,
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "ergebnis/composer-normalize": true
        }
    },
    "scripts": {
        "build": [
            "@composer bin box require --dev humbug/box",
            "box validate",
            "box compile"
        ],
        "lint": [
            "phpcs",
            "phpstan --memory-limit=-1",
            "rector --clear-cache --dry-run"
        ],
        "lint-fix": [
            "rector --clear-cache",
            "phpcbf"
        ],
        "reset": "rm -Rf vendor vendor-bin composer.lock",
        "test": "phpunit --no-coverage",
        "test-coverage": "phpunit"
    }
}
